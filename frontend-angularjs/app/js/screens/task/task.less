/*
 * Copyright (C) 2016-2020 TU Muenchen and contributors of ANEXIA Internetdienstleistungs GmbH
 * SPDX-License-Identifier: AGPL-3.0-or-later
 */
@import "../../../theme/variables";


task-list {
  .selected-user-text + select-search-widget div {
    display: inline-block;
    margin-bottom: -3px;
  }

  .selected-user-text {
    float: left;
    margin-top: 3px;
    margin-right: 4px;
  }

  select-search-widget .form-group {
    margin-bottom: 0px;
  }

  .state-header {
    text-align: center;
  }

  .project-header {
    background-color: @task-list-project-header-background-color;
    margin-bottom: 5px;
    padding: 5px 15px;
    height: 30px;
  }

  .closed {
    opacity: 0.6;
  }


  /** Drag and Drop */
  /**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
  ul[dnd-list],
  ul[dnd-list] > li {
    position: relative;
  }

  /**
   * The dnd-list should always have a min-height,
   * otherwise you can't drop to it once it's empty
   */
  ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
  }

  /**
   * The dndDraggingSource class will be applied to
   * the source element of a drag operation. It makes
   * sense to hide it to give the user the feeling
   * that he's actually moving it.
   */
  ul[dnd-list] .dndDraggingSource {
    display: none;
  }

  /**
   * An element with .dndPlaceholder class will be
   * added to the dnd-list while the user is dragging
   * over it.
   */
  ul[dnd-list] .dndPlaceholder {
    display: block;
    min-height: 60px;
    margin: 5px;

    > div {
      padding: 20px 15px;
      height: 100%;
      background-color: @task-list-dndlist-ul-div-background-color;
      border: 1px dashed @task-list-dndlist-ul-div-border-color;
    }
  }

  /**
   * The dnd-lists's child elements currently MUST have
   * position: relative. Otherwise we can not determine
   * whether the mouse pointer is in the upper or lower
   * half of the element we are dragging over. In other
   * browsers we can use event.offsetY for this.
   */
  ul[dnd-list] li {
    display: block;

    margin: 5px;

    /* Disable text selection if item is not draggable */
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    > div {
      box-shadow: 0px 2px 4px 0px rgba(0,0,0,0.5);
      padding: 15px;
      background-color: @task-list-dndlist-ul-li-div-background-color;
      .task-li-assigned-to {
        font-size: 11px;
      }
    }
  }


  ul[dnd-list] li dnd-nodrag {
    display: block;
    padding: 10px 15px;
  }

  /**
   * Handle positioning
   */
  .handle {
    cursor: move;
    position: absolute;
    top: 14px;
  }

}

